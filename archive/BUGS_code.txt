#https://stackoverflow.com/questions/48776303/how-to-obtain-multinomial-probabilities-in-winbugs-with-multiple-regression

#https://books.google.co.uk/books?id=rvOcBAAAQBAJ&pg=PA225&lpg=PA225&dq=hierarchical+multinomial+bugs&source=bl&ots=rv45Yehc7_&sig=ACfU3U3AztAopHFkb9FoutUePRCWnYCSpg&hl=en&sa=X&ved=2ahUKEwiDk_SxzbjhAhXcSxUIHRtUAAs4ChDoATABegQICBAB#v=onepage&q=hierarchical%20multinomial%20bugs&f=false

model {
  
  ## 2 groups ##
  
  for(j in 1:len_a){
      
      Xd[j] ~ dbin(Yd[j], Na[j])
      logit(Yd[j]) <- beta0d[studyid_a[j]] + beta1d[studyid_a[j]]*time_a[j]
      
      Xf[j] ~ dbin(Yf[j], Na[j])
      logit(Yf[j]) <- beta0f[studyid_a[j]] + beta1f[studyid_a[j]]*time_a[j]
    }
  
  for (i in 1:N_studies_a){
  
    beta0d[i] ~ dnorm(mu_beta0d, tau_beta0d)
    beta1d[i] ~ dnorm(mu_beta1d, tau_beta1d)
    
    beta0f[i] ~ dnorm(mu_beta0f, tau_beta0f)
    beta1f[i] ~ dnorm(mu_beta1f, tau_beta1f)
  }
  
  ## 4 groups ##
  
  for(j in 1:len_b){
      
      Xdfsu[j, 1:4] ~ dmulti(prob[j, 1:4], Nb[j])
      
      phi[j,1] <- 1
      prob[j,1] <- 1/sum(phi[j, 1:4])
      
      for(c in 2:4){
      
        log(phi[j,c]) <- beta0c[studyid_b[j], c] + beta1c[studyid_b[j], c]*time_b[j]
        prob[j,c] <- phi[j,c]/sum(phi[j, 1:4])
      }
    }
  
  for (i in 1:N_studies_b){
  
    #set reference category to zero
    beta0c[i,1] <- 0
    beta1c[i,1] <- 0
      
    for(c in 2:4){
      
      beta0c[i,c] ~ dnorm(mu_beta0[c], tau_beta0[c])
      beta1c[i,c] ~ dnorm(mu_beta1[c], tau_beta1[c])
    }
  }
  
  ## node transformations

  for(c in 2:4){
    
    tau_beta1[c] <- 1/sigma2_beta1[c]					# precision for between trials
    sigma_beta1[c] <- exp(logsigma_beta1[c])	# sd for between trials
    sigma2_beta1[c] <- pow(sigma_beta1[c], 2)	# variance for between trials
  
    tau_beta0[c] <- 1/sigma2_beta0[c]					# precision for between trials
    sigma_beta0[c] <- exp(logsigma_beta0[c])	# sd for between trials
    sigma2_beta0[c] <- pow(sigma_beta0[c], 2)	# variance for between trials
  }
  
  tau_beta1d <- 1/sigma2_beta1d					# precision for between trials
  sigma_beta1d <- exp(logsigma_beta1d)	# sd for between trials
  sigma2_beta1d <- pow(sigma_beta1d, 2)	# variance for between trials
  
  tau_beta0d <- 1/sigma2_beta0d					# precision for between trials
  sigma_beta0d <- exp(logsigma_beta0d)	# sd for between trials
  sigma2_beta0d <- pow(sigma_beta0d, 2)	# variance for between trials
  
  tau_beta1f <- 1/sigma2_beta1f					# precision for between trials
  sigma_beta1f <- exp(logsigma_beta1f)	# sd for between trials
  sigma2_beta1f <- pow(sigma_beta1f, 2)	# variance for between trials
  
  tau_beta0f <- 1/sigma2_beta0f					# precision for between trials
  sigma_beta0f <- exp(logsigma_beta0f)	# sd for between trials
  sigma2_beta0f <- pow(sigma_beta0f, 2)	# variance for between trials
  
  ## prior distributions
  
  for(c in 2:4){
  
    mu_beta0[c] ~ dnorm(0, 1.0E-6)			  
    logsigma_beta0[c] ~ dunif(-5, 10)		    # log-sd for between trials
    mu_beta1[c] ~ dnorm(0, 1.0E-6)			  
    logsigma_beta1[c] ~ dunif(-5, 10)		    # log-sd for between trials
  }
  
  mu_beta0d ~ dnorm(0, 1.0E-6)			  
  logsigma_beta0d ~ dunif(-5, 10)		    # log-sd for between trials
  mu_beta1d ~ dnorm(0, 1.0E-6)			  
  logsigma_beta1d ~ dunif(-5, 10)		    # log-sd for between trials
  
  mu_beta0f ~ dnorm(0, 1.0E-6)			  
  logsigma_beta0f ~ dunif(-5, 10)		    # log-sd for between trials
  mu_beta1f ~ dnorm(0, 1.0E-6)			  
  logsigma_beta1f ~ dunif(-5, 10)		    # log-sd for between trials
  
  for (t in 1:365) {
  
    ## posterior predictions
    logit(Yd_pred[t]) <- mu_beta0d + mu_beta1d*t
    logit(Yf_pred[t]) <- mu_beta0f + mu_beta1f*t
    
    phi_pred[t,1] <- 1
    prob_pred[t,1] <- 1/sum(phi_pred[t, 1:4])
    
    for(c in 2:4){
    
      log(phi_pred[t,c]) <- mu_beta0[c] + mu_beta1[c]*t
      prob_pred[t,c] <- phi_pred[t,c]/sum(phi_pred[t, 1:4])
    }
    
    predd_pred[t] <- prob_pred[t,1] + prob_pred[t,2]
    predf_pred[t] <- prob_pred[t,3] + prob_pred[t,4]
    
    ## Bayesian p-value
    #c1.ppost[j] <- step(c1.rep[j] - c1[j])
  }
  
}

